import { NgxGalleryAction } from './ngx-gallery-action';
import { NgxGalleryOrder } from './ngx-gallery-order';
import { NgxGalleryLayout } from './ngx-gallery-layout';
import { NgxGalleryAnimation } from './ngx-gallery-animation';
import { NgxGalleryImageSize } from './ngx-gallery-image-size';
var NgxGalleryOptions = /** @class */ (function () {
    function NgxGalleryOptions(obj) {
        var preventDefaults = obj.breakpoint === undefined ? false : true;
        function use(source, defaultValue) {
            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;
        }
        this.breakpoint = use(obj.breakpoint, undefined);
        this.width = use(obj.width, '500px');
        this.height = use(obj.height, '400px');
        this.fullWidth = use(obj.fullWidth, false);
        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);
        this.startIndex = use(obj.startIndex, 0);
        this.linkTarget = use(obj.linkTarget, '_blank');
        this.lazyLoading = use(obj.lazyLoading, true);
        this.image = use(obj.image, true);
        this.imagePercent = use(obj.imagePercent, 75);
        this.imageArrows = use(obj.imageArrows, true);
        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);
        this.imageSwipe = use(obj.imageSwipe, false);
        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);
        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);
        this.imageAutoPlay = use(obj.imageAutoPlay, false);
        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);
        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);
        this.imageInfinityMove = use(obj.imageInfinityMove, false);
        if (obj && obj.imageActions && obj.imageActions.length) {
            obj.imageActions = obj.imageActions.map(function (action) { return new NgxGalleryAction(action); });
        }
        this.imageActions = use(obj.imageActions, []);
        this.imageDescription = use(obj.imageDescription, false);
        this.imageBullets = use(obj.imageBullets, false);
        this.thumbnails = use(obj.thumbnails, true);
        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);
        this.thumbnailsRows = use(obj.thumbnailsRows, 1);
        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);
        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);
        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);
        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);
        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);
        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);
        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);
        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);
        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);
        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);
        this.thumbnailMargin = use(obj.thumbnailMargin, 10);
        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);
        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {
            obj.thumbnailActions = obj.thumbnailActions.map(function (action) { return new NgxGalleryAction(action); });
        }
        this.thumbnailActions = use(obj.thumbnailActions, []);
        this.preview = use(obj.preview, true);
        this.previewDescription = use(obj.previewDescription, true);
        this.previewArrows = use(obj.previewArrows, true);
        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);
        this.previewSwipe = use(obj.previewSwipe, false);
        this.previewFullscreen = use(obj.previewFullscreen, false);
        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);
        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);
        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);
        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);
        this.previewAnimation = use(obj.previewAnimation, true);
        this.previewAutoPlay = use(obj.previewAutoPlay, false);
        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);
        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);
        this.previewInfinityMove = use(obj.previewInfinityMove, false);
        this.previewZoom = use(obj.previewZoom, false);
        this.previewZoomStep = use(obj.previewZoomStep, 0.1);
        this.previewZoomMax = use(obj.previewZoomMax, 2);
        this.previewZoomMin = use(obj.previewZoomMin, 0.5);
        this.previewRotate = use(obj.previewRotate, false);
        this.previewDownload = use(obj.previewDownload, false);
        this.previewCustom = use(obj.previewCustom, undefined);
        this.previewBullets = use(obj.previewBullets, false);
        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');
        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');
        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');
        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');
        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');
        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');
        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');
        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');
        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');
        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');
        if (obj && obj.actions && obj.actions.length) {
            obj.actions = obj.actions.map(function (action) { return new NgxGalleryAction(action); });
        }
        this.actions = use(obj.actions, []);
    }
    return NgxGalleryOptions;
}());
export { NgxGalleryOptions };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWdhbGxlcnktb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Brb2xrb3Yvbmd4LWdhbGxlcnkvIiwic291cmNlcyI6WyJsaWIvbmd4LWdhbGxlcnktb3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUN0RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDcEQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUE2RTdEO0lBMEVJLDJCQUFZLEdBQXVCO1FBRS9CLElBQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQyxVQUFVLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUVwRSxTQUFTLEdBQUcsQ0FBSSxNQUFTLEVBQUUsWUFBZTtZQUN0QyxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sS0FBSyxTQUFTLElBQUksZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDO1FBQ3BGLENBQUM7UUFFRCxJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsU0FBUyxF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TyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFO1lBQzFDLEdBQUcsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxJQUFJLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxFQUE1QixDQUE0QixDQUFDLENBQUM7U0FDekU7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFDTCx3QkFBQztBQUFELENBQUMsQUF6S0QsSUF5S0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05neEdhbGxlcnlBY3Rpb259IGZyb20gJy4vbmd4LWdhbGxlcnktYWN0aW9uJztcbmltcG9ydCB7Tmd4R2FsbGVyeU9yZGVyfSBmcm9tICcuL25neC1nYWxsZXJ5LW9yZGVyJztcbmltcG9ydCB7Tmd4R2FsbGVyeUxheW91dH0gZnJvbSAnLi9uZ3gtZ2FsbGVyeS1sYXlvdXQnO1xuaW1wb3J0IHtOZ3hHYWxsZXJ5QW5pbWF0aW9ufSBmcm9tICcuL25neC1nYWxsZXJ5LWFuaW1hdGlvbic7XG5pbXBvcnQge05neEdhbGxlcnlJbWFnZVNpemV9IGZyb20gJy4vbmd4LWdhbGxlcnktaW1hZ2Utc2l6ZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU5neEdhbGxlcnlPcHRpb25zIHtcbiAgICB3aWR0aD86IHN0cmluZztcbiAgICBoZWlnaHQ/OiBzdHJpbmc7XG4gICAgYnJlYWtwb2ludD86IG51bWJlcjtcbiAgICBmdWxsV2lkdGg/OiBib29sZWFuO1xuICAgIGxheW91dD86IHN0cmluZztcbiAgICBzdGFydEluZGV4PzogbnVtYmVyO1xuICAgIGxpbmtUYXJnZXQ/OiBzdHJpbmc7XG4gICAgbGF6eUxvYWRpbmc/OiBib29sZWFuO1xuICAgIGltYWdlPzogYm9vbGVhbjtcbiAgICBpbWFnZVBlcmNlbnQ/OiBudW1iZXI7XG4gICAgaW1hZ2VBcnJvd3M/OiBib29sZWFuO1xuICAgIGltYWdlQXJyb3dzQXV0b0hpZGU/OiBib29sZWFuO1xuICAgIGltYWdlU3dpcGU/OiBib29sZWFuO1xuICAgIGltYWdlQW5pbWF0aW9uPzogc3RyaW5nO1xuICAgIGltYWdlU2l6ZT86IHN0cmluZztcbiAgICBpbWFnZUF1dG9QbGF5PzogYm9vbGVhbjtcbiAgICBpbWFnZUF1dG9QbGF5SW50ZXJ2YWw/OiBudW1iZXI7XG4gICAgaW1hZ2VBdXRvUGxheVBhdXNlT25Ib3Zlcj86IGJvb2xlYW47XG4gICAgaW1hZ2VJbmZpbml0eU1vdmU/OiBib29sZWFuO1xuICAgIGltYWdlQWN0aW9ucz86IE5neEdhbGxlcnlBY3Rpb25bXTtcbiAgICBpbWFnZURlc2NyaXB0aW9uPzogYm9vbGVhbjtcbiAgICBpbWFnZUJ1bGxldHM/OiBib29sZWFuO1xuICAgIHRodW1ibmFpbHM/OiBib29sZWFuO1xuICAgIHRodW1ibmFpbHNDb2x1bW5zPzogbnVtYmVyO1xuICAgIHRodW1ibmFpbHNSb3dzPzogbnVtYmVyO1xuICAgIHRodW1ibmFpbHNQZXJjZW50PzogbnVtYmVyO1xuICAgIHRodW1ibmFpbHNNYXJnaW4/OiBudW1iZXI7XG4gICAgdGh1bWJuYWlsc0Fycm93cz86IGJvb2xlYW47XG4gICAgdGh1bWJuYWlsc0Fycm93c0F1dG9IaWRlPzogYm9vbGVhbjtcbiAgICB0aHVtYm5haWxzU3dpcGU/OiBib29sZWFuO1xuICAgIHRodW1ibmFpbHNNb3ZlU2l6ZT86IG51bWJlcjtcbiAgICB0aHVtYm5haWxzT3JkZXI/OiBOZ3hHYWxsZXJ5T3JkZXI7XG4gICAgdGh1bWJuYWlsc1JlbWFpbmluZ0NvdW50PzogYm9vbGVhbjtcbiAgICB0aHVtYm5haWxzQXNMaW5rcz86IGJvb2xlYW47XG4gICAgdGh1bWJuYWlsc0F1dG9IaWRlPzogYm9vbGVhbjtcbiAgICB0aHVtYm5haWxNYXJnaW4/OiBudW1iZXI7XG4gICAgdGh1bWJuYWlsU2l6ZT86IHN0cmluZztcbiAgICB0aHVtYm5haWxBY3Rpb25zPzogTmd4R2FsbGVyeUFjdGlvbltdO1xuICAgIHByZXZpZXc/OiBib29sZWFuO1xuICAgIHByZXZpZXdEZXNjcmlwdGlvbj86IGJvb2xlYW47XG4gICAgcHJldmlld0Fycm93cz86IGJvb2xlYW47XG4gICAgcHJldmlld0Fycm93c0F1dG9IaWRlPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3U3dpcGU/OiBib29sZWFuO1xuICAgIHByZXZpZXdGdWxsc2NyZWVuPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3Rm9yY2VGdWxsc2NyZWVuPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3Q2xvc2VPbkNsaWNrPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3Q2xvc2VPbkVzYz86IGJvb2xlYW47XG4gICAgcHJldmlld0tleWJvYXJkTmF2aWdhdGlvbj86IGJvb2xlYW47XG4gICAgcHJldmlld0FuaW1hdGlvbj86IGJvb2xlYW47XG4gICAgcHJldmlld0F1dG9QbGF5PzogYm9vbGVhbjtcbiAgICBwcmV2aWV3QXV0b1BsYXlJbnRlcnZhbD86IG51bWJlcjtcbiAgICBwcmV2aWV3QXV0b1BsYXlQYXVzZU9uSG92ZXI/OiBib29sZWFuO1xuICAgIHByZXZpZXdJbmZpbml0eU1vdmU/OiBib29sZWFuO1xuICAgIHByZXZpZXdab29tPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3Wm9vbVN0ZXA/OiBudW1iZXI7XG4gICAgcHJldmlld1pvb21NYXg/OiBudW1iZXI7XG4gICAgcHJldmlld1pvb21NaW4/OiBudW1iZXI7XG4gICAgcHJldmlld1JvdGF0ZT86IGJvb2xlYW47XG4gICAgcHJldmlld0Rvd25sb2FkPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3Q3VzdG9tPzogKGluZGV4OiBudW1iZXIpID0+IHZvaWQ7XG4gICAgcHJldmlld0J1bGxldHM/OiBib29sZWFuO1xuICAgIGFycm93UHJldkljb24/OiBzdHJpbmc7XG4gICAgYXJyb3dOZXh0SWNvbj86IHN0cmluZztcbiAgICBjbG9zZUljb24/OiBzdHJpbmc7XG4gICAgZnVsbHNjcmVlbkljb24/OiBzdHJpbmc7XG4gICAgc3Bpbm5lckljb24/OiBzdHJpbmc7XG4gICAgem9vbUluSWNvbj86IHN0cmluZztcbiAgICB6b29tT3V0SWNvbj86IHN0cmluZztcbiAgICByb3RhdGVMZWZ0SWNvbj86IHN0cmluZztcbiAgICByb3RhdGVSaWdodEljb24/OiBzdHJpbmc7XG4gICAgZG93bmxvYWRJY29uPzogc3RyaW5nO1xuICAgIGFjdGlvbnM/OiBOZ3hHYWxsZXJ5QWN0aW9uW107XG59XG5cbmV4cG9ydCBjbGFzcyBOZ3hHYWxsZXJ5T3B0aW9ucyBpbXBsZW1lbnRzIElOZ3hHYWxsZXJ5T3B0aW9ucyB7XG4gICAgd2lkdGg/OiBzdHJpbmc7XG4gICAgaGVpZ2h0Pzogc3RyaW5nO1xuICAgIGJyZWFrcG9pbnQ/OiBudW1iZXI7XG4gICAgZnVsbFdpZHRoPzogYm9vbGVhbjtcbiAgICBsYXlvdXQ/OiBzdHJpbmc7XG4gICAgc3RhcnRJbmRleD86IG51bWJlcjtcbiAgICBsaW5rVGFyZ2V0Pzogc3RyaW5nO1xuICAgIGxhenlMb2FkaW5nPzogYm9vbGVhbjtcbiAgICBpbWFnZT86IGJvb2xlYW47XG4gICAgaW1hZ2VQZXJjZW50PzogbnVtYmVyO1xuICAgIGltYWdlQXJyb3dzPzogYm9vbGVhbjtcbiAgICBpbWFnZUFycm93c0F1dG9IaWRlPzogYm9vbGVhbjtcbiAgICBpbWFnZVN3aXBlPzogYm9vbGVhbjtcbiAgICBpbWFnZUFuaW1hdGlvbj86IHN0cmluZztcbiAgICBpbWFnZVNpemU/OiBzdHJpbmc7XG4gICAgaW1hZ2VBdXRvUGxheT86IGJvb2xlYW47XG4gICAgaW1hZ2VBdXRvUGxheUludGVydmFsPzogbnVtYmVyO1xuICAgIGltYWdlQXV0b1BsYXlQYXVzZU9uSG92ZXI/OiBib29sZWFuO1xuICAgIGltYWdlSW5maW5pdHlNb3ZlPzogYm9vbGVhbjtcbiAgICBpbWFnZUFjdGlvbnM/OiBOZ3hHYWxsZXJ5QWN0aW9uW107XG4gICAgaW1hZ2VEZXNjcmlwdGlvbj86IGJvb2xlYW47XG4gICAgaW1hZ2VCdWxsZXRzPzogYm9vbGVhbjtcbiAgICB0aHVtYm5haWxzPzogYm9vbGVhbjtcbiAgICB0aHVtYm5haWxzQ29sdW1ucz86IG51bWJlcjtcbiAgICB0aHVtYm5haWxzUm93cz86IG51bWJlcjtcbiAgICB0aHVtYm5haWxzUGVyY2VudD86IG51bWJlcjtcbiAgICB0aHVtYm5haWxzTWFyZ2luPzogbnVtYmVyO1xuICAgIHRodW1ibmFpbHNBcnJvd3M/OiBib29sZWFuO1xuICAgIHRodW1ibmFpbHNBcnJvd3NBdXRvSGlkZT86IGJvb2xlYW47XG4gICAgdGh1bWJuYWlsc1N3aXBlPzogYm9vbGVhbjtcbiAgICB0aHVtYm5haWxzTW92ZVNpemU/OiBudW1iZXI7XG4gICAgdGh1bWJuYWlsc09yZGVyPzogTmd4R2FsbGVyeU9yZGVyO1xuICAgIHRodW1ibmFpbHNSZW1haW5pbmdDb3VudD86IGJvb2xlYW47XG4gICAgdGh1bWJuYWlsc0FzTGlua3M/OiBib29sZWFuO1xuICAgIHRodW1ibmFpbHNBdXRvSGlkZT86IGJvb2xlYW47XG4gICAgdGh1bWJuYWlsTWFyZ2luPzogbnVtYmVyO1xuICAgIHRodW1ibmFpbFNpemU/OiBzdHJpbmc7XG4gICAgdGh1bWJuYWlsQWN0aW9ucz86IE5neEdhbGxlcnlBY3Rpb25bXTtcbiAgICBwcmV2aWV3PzogYm9vbGVhbjtcbiAgICBwcmV2aWV3RGVzY3JpcHRpb24/OiBib29sZWFuO1xuICAgIHByZXZpZXdBcnJvd3M/OiBib29sZWFuO1xuICAgIHByZXZpZXdBcnJvd3NBdXRvSGlkZT86IGJvb2xlYW47XG4gICAgcHJldmlld1N3aXBlPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3RnVsbHNjcmVlbj86IGJvb2xlYW47XG4gICAgcHJldmlld0ZvcmNlRnVsbHNjcmVlbj86IGJvb2xlYW47XG4gICAgcHJldmlld0Nsb3NlT25DbGljaz86IGJvb2xlYW47XG4gICAgcHJldmlld0Nsb3NlT25Fc2M/OiBib29sZWFuO1xuICAgIHByZXZpZXdLZXlib2FyZE5hdmlnYXRpb24/OiBib29sZWFuO1xuICAgIHByZXZpZXdBbmltYXRpb24/OiBib29sZWFuO1xuICAgIHByZXZpZXdBdXRvUGxheT86IGJvb2xlYW47XG4gICAgcHJldmlld0F1dG9QbGF5SW50ZXJ2YWw/OiBudW1iZXI7XG4gICAgcHJldmlld0F1dG9QbGF5UGF1c2VPbkhvdmVyPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3SW5maW5pdHlNb3ZlPzogYm9vbGVhbjtcbiAgICBwcmV2aWV3Wm9vbT86IGJvb2xlYW47XG4gICAgcHJldmlld1pvb21TdGVwPzogbnVtYmVyO1xuICAgIHByZXZpZXdab29tTWF4PzogbnVtYmVyO1xuICAgIHByZXZpZXdab29tTWluPzogbnVtYmVyO1xuICAgIHByZXZpZXdSb3RhdGU/OiBib29sZWFuO1xuICAgIHByZXZpZXdEb3dubG9hZD86IGJvb2xlYW47XG4gICAgcHJldmlld0N1c3RvbT86IChpbmRleDogbnVtYmVyKSA9PiB2b2lkO1xuICAgIHByZXZpZXdCdWxsZXRzPzogYm9vbGVhbjtcbiAgICBhcnJvd1ByZXZJY29uPzogc3RyaW5nO1xuICAgIGFycm93TmV4dEljb24/OiBzdHJpbmc7XG4gICAgY2xvc2VJY29uPzogc3RyaW5nO1xuICAgIGZ1bGxzY3JlZW5JY29uPzogc3RyaW5nO1xuICAgIHNwaW5uZXJJY29uPzogc3RyaW5nO1xuICAgIHpvb21Jbkljb24/OiBzdHJpbmc7XG4gICAgem9vbU91dEljb24/OiBzdHJpbmc7XG4gICAgcm90YXRlTGVmdEljb24/OiBzdHJpbmc7XG4gICAgcm90YXRlUmlnaHRJY29uPzogc3RyaW5nO1xuICAgIGRvd25sb2FkSWNvbj86IHN0cmluZztcbiAgICBhY3Rpb25zPzogTmd4R2FsbGVyeUFjdGlvbltdO1xuXG4gICAgY29uc3RydWN0b3Iob2JqOiBJTmd4R2FsbGVyeU9wdGlvbnMpIHtcblxuICAgICAgICBjb25zdCBwcmV2ZW50RGVmYXVsdHMgPSBvYmouYnJlYWtwb2ludCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiB0cnVlO1xuXG4gICAgICAgIGZ1bmN0aW9uIHVzZTxUPihzb3VyY2U6IFQsIGRlZmF1bHRWYWx1ZTogVCk6IFQge1xuICAgICAgICAgICAgcmV0dXJuIG9iaiAmJiAoc291cmNlICE9PSB1bmRlZmluZWQgfHwgcHJldmVudERlZmF1bHRzKSA/IHNvdXJjZSA6IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYnJlYWtwb2ludCA9IHVzZShvYmouYnJlYWtwb2ludCwgdW5kZWZpbmVkKTtcbiAgICAgICAgdGhpcy53aWR0aCA9IHVzZShvYmoud2lkdGgsICc1MDBweCcpO1xuICAgICAgICB0aGlzLmhlaWdodCA9IHVzZShvYmouaGVpZ2h0LCAnNDAwcHgnKTtcbiAgICAgICAgdGhpcy5mdWxsV2lkdGggPSB1c2Uob2JqLmZ1bGxXaWR0aCwgZmFsc2UpO1xuICAgICAgICB0aGlzLmxheW91dCA9IHVzZShvYmoubGF5b3V0LCBOZ3hHYWxsZXJ5TGF5b3V0LlRodW1ibmFpbHNCb3R0b20pO1xuICAgICAgICB0aGlzLnN0YXJ0SW5kZXggPSB1c2Uob2JqLnN0YXJ0SW5kZXgsIDApO1xuICAgICAgICB0aGlzLmxpbmtUYXJnZXQgPSB1c2Uob2JqLmxpbmtUYXJnZXQsICdfYmxhbmsnKTtcbiAgICAgICAgdGhpcy5sYXp5TG9hZGluZyA9IHVzZShvYmoubGF6eUxvYWRpbmcsIHRydWUpO1xuXG4gICAgICAgIHRoaXMuaW1hZ2UgPSB1c2Uob2JqLmltYWdlLCB0cnVlKTtcbiAgICAgICAgdGhpcy5pbWFnZVBlcmNlbnQgPSB1c2Uob2JqLmltYWdlUGVyY2VudCwgNzUpO1xuICAgICAgICB0aGlzLmltYWdlQXJyb3dzID0gdXNlKG9iai5pbWFnZUFycm93cywgdHJ1ZSk7XG4gICAgICAgIHRoaXMuaW1hZ2VBcnJvd3NBdXRvSGlkZSA9IHVzZShvYmouaW1hZ2VBcnJvd3NBdXRvSGlkZSwgZmFsc2UpO1xuICAgICAgICB0aGlzLmltYWdlU3dpcGUgPSB1c2Uob2JqLmltYWdlU3dpcGUsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5pbWFnZUFuaW1hdGlvbiA9IHVzZShvYmouaW1hZ2VBbmltYXRpb24sIE5neEdhbGxlcnlBbmltYXRpb24uRmFkZSk7XG4gICAgICAgIHRoaXMuaW1hZ2VTaXplID0gdXNlKG9iai5pbWFnZVNpemUsIE5neEdhbGxlcnlJbWFnZVNpemUuQ292ZXIpO1xuICAgICAgICB0aGlzLmltYWdlQXV0b1BsYXkgPSB1c2Uob2JqLmltYWdlQXV0b1BsYXksIGZhbHNlKTtcbiAgICAgICAgdGhpcy5pbWFnZUF1dG9QbGF5SW50ZXJ2YWwgPSB1c2Uob2JqLmltYWdlQXV0b1BsYXlJbnRlcnZhbCwgMjAwMCk7XG4gICAgICAgIHRoaXMuaW1hZ2VBdXRvUGxheVBhdXNlT25Ib3ZlciA9IHVzZShvYmouaW1hZ2VBdXRvUGxheVBhdXNlT25Ib3ZlciwgZmFsc2UpO1xuICAgICAgICB0aGlzLmltYWdlSW5maW5pdHlNb3ZlID0gdXNlKG9iai5pbWFnZUluZmluaXR5TW92ZSwgZmFsc2UpO1xuICAgICAgICBpZiAob2JqICYmIG9iai5pbWFnZUFjdGlvbnMgJiYgb2JqLmltYWdlQWN0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIG9iai5pbWFnZUFjdGlvbnMgPSBvYmouaW1hZ2VBY3Rpb25zLm1hcChhY3Rpb24gPT4gbmV3IE5neEdhbGxlcnlBY3Rpb24oYWN0aW9uKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbWFnZUFjdGlvbnMgPSB1c2Uob2JqLmltYWdlQWN0aW9ucywgW10pO1xuICAgICAgICB0aGlzLmltYWdlRGVzY3JpcHRpb24gPSB1c2Uob2JqLmltYWdlRGVzY3JpcHRpb24sIGZhbHNlKTtcbiAgICAgICAgdGhpcy5pbWFnZUJ1bGxldHMgPSB1c2Uob2JqLmltYWdlQnVsbGV0cywgZmFsc2UpO1xuXG4gICAgICAgIHRoaXMudGh1bWJuYWlscyA9IHVzZShvYmoudGh1bWJuYWlscywgdHJ1ZSk7XG4gICAgICAgIHRoaXMudGh1bWJuYWlsc0NvbHVtbnMgPSB1c2Uob2JqLnRodW1ibmFpbHNDb2x1bW5zLCA0KTtcbiAgICAgICAgdGhpcy50aHVtYm5haWxzUm93cyA9IHVzZShvYmoudGh1bWJuYWlsc1Jvd3MsIDEpO1xuICAgICAgICB0aGlzLnRodW1ibmFpbHNQZXJjZW50ID0gdXNlKG9iai50aHVtYm5haWxzUGVyY2VudCwgMjUpO1xuICAgICAgICB0aGlzLnRodW1ibmFpbHNNYXJnaW4gPSB1c2Uob2JqLnRodW1ibmFpbHNNYXJnaW4sIDEwKTtcbiAgICAgICAgdGhpcy50aHVtYm5haWxzQXJyb3dzID0gdXNlKG9iai50aHVtYm5haWxzQXJyb3dzLCB0cnVlKTtcbiAgICAgICAgdGhpcy50aHVtYm5haWxzQXJyb3dzQXV0b0hpZGUgPSB1c2Uob2JqLnRodW1ibmFpbHNBcnJvd3NBdXRvSGlkZSwgZmFsc2UpO1xuICAgICAgICB0aGlzLnRodW1ibmFpbHNTd2lwZSA9IHVzZShvYmoudGh1bWJuYWlsc1N3aXBlLCBmYWxzZSk7XG4gICAgICAgIHRoaXMudGh1bWJuYWlsc01vdmVTaXplID0gdXNlKG9iai50aHVtYm5haWxzTW92ZVNpemUsIDEpO1xuICAgICAgICB0aGlzLnRodW1ibmFpbHNPcmRlciA9IHVzZShvYmoudGh1bWJuYWlsc09yZGVyLCBOZ3hHYWxsZXJ5T3JkZXIuQ29sdW1uKTtcbiAgICAgICAgdGhpcy50aHVtYm5haWxzUmVtYWluaW5nQ291bnQgPSB1c2Uob2JqLnRodW1ibmFpbHNSZW1haW5pbmdDb3VudCwgZmFsc2UpO1xuICAgICAgICB0aGlzLnRodW1ibmFpbHNBc0xpbmtzID0gdXNlKG9iai50aHVtYm5haWxzQXNMaW5rcywgZmFsc2UpO1xuICAgICAgICB0aGlzLnRodW1ibmFpbHNBdXRvSGlkZSA9IHVzZShvYmoudGh1bWJuYWlsc0F1dG9IaWRlLCBmYWxzZSk7XG4gICAgICAgIHRoaXMudGh1bWJuYWlsTWFyZ2luID0gdXNlKG9iai50aHVtYm5haWxNYXJnaW4sIDEwKTtcbiAgICAgICAgdGhpcy50aHVtYm5haWxTaXplID0gdXNlKG9iai50aHVtYm5haWxTaXplLCBOZ3hHYWxsZXJ5SW1hZ2VTaXplLkNvdmVyKTtcbiAgICAgICAgaWYgKG9iaiAmJiBvYmoudGh1bWJuYWlsQWN0aW9ucyAmJiBvYmoudGh1bWJuYWlsQWN0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIG9iai50aHVtYm5haWxBY3Rpb25zID0gb2JqLnRodW1ibmFpbEFjdGlvbnMubWFwKGFjdGlvbiA9PiBuZXcgTmd4R2FsbGVyeUFjdGlvbihhY3Rpb24pKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRodW1ibmFpbEFjdGlvbnMgPSB1c2Uob2JqLnRodW1ibmFpbEFjdGlvbnMsIFtdKTtcblxuICAgICAgICB0aGlzLnByZXZpZXcgPSB1c2Uob2JqLnByZXZpZXcsIHRydWUpO1xuICAgICAgICB0aGlzLnByZXZpZXdEZXNjcmlwdGlvbiA9IHVzZShvYmoucHJldmlld0Rlc2NyaXB0aW9uLCB0cnVlKTtcbiAgICAgICAgdGhpcy5wcmV2aWV3QXJyb3dzID0gdXNlKG9iai5wcmV2aWV3QXJyb3dzLCB0cnVlKTtcbiAgICAgICAgdGhpcy5wcmV2aWV3QXJyb3dzQXV0b0hpZGUgPSB1c2Uob2JqLnByZXZpZXdBcnJvd3NBdXRvSGlkZSwgZmFsc2UpO1xuICAgICAgICB0aGlzLnByZXZpZXdTd2lwZSA9IHVzZShvYmoucHJldmlld1N3aXBlLCBmYWxzZSk7XG4gICAgICAgIHRoaXMucHJldmlld0Z1bGxzY3JlZW4gPSB1c2Uob2JqLnByZXZpZXdGdWxsc2NyZWVuLCBmYWxzZSk7XG4gICAgICAgIHRoaXMucHJldmlld0ZvcmNlRnVsbHNjcmVlbiA9IHVzZShvYmoucHJldmlld0ZvcmNlRnVsbHNjcmVlbiwgZmFsc2UpO1xuICAgICAgICB0aGlzLnByZXZpZXdDbG9zZU9uQ2xpY2sgPSB1c2Uob2JqLnByZXZpZXdDbG9zZU9uQ2xpY2ssIGZhbHNlKTtcbiAgICAgICAgdGhpcy5wcmV2aWV3Q2xvc2VPbkVzYyA9IHVzZShvYmoucHJldmlld0Nsb3NlT25Fc2MsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5wcmV2aWV3S2V5Ym9hcmROYXZpZ2F0aW9uID0gdXNlKG9iai5wcmV2aWV3S2V5Ym9hcmROYXZpZ2F0aW9uLCBmYWxzZSk7XG4gICAgICAgIHRoaXMucHJldmlld0FuaW1hdGlvbiA9IHVzZShvYmoucHJldmlld0FuaW1hdGlvbiwgdHJ1ZSk7XG4gICAgICAgIHRoaXMucHJldmlld0F1dG9QbGF5ID0gdXNlKG9iai5wcmV2aWV3QXV0b1BsYXksIGZhbHNlKTtcbiAgICAgICAgdGhpcy5wcmV2aWV3QXV0b1BsYXlJbnRlcnZhbCA9IHVzZShvYmoucHJldmlld0F1dG9QbGF5SW50ZXJ2YWwsIDIwMDApO1xuICAgICAgICB0aGlzLnByZXZpZXdBdXRvUGxheVBhdXNlT25Ib3ZlciA9IHVzZShvYmoucHJldmlld0F1dG9QbGF5UGF1c2VPbkhvdmVyLCBmYWxzZSk7XG4gICAgICAgIHRoaXMucHJldmlld0luZmluaXR5TW92ZSA9IHVzZShvYmoucHJldmlld0luZmluaXR5TW92ZSwgZmFsc2UpO1xuICAgICAgICB0aGlzLnByZXZpZXdab29tID0gdXNlKG9iai5wcmV2aWV3Wm9vbSwgZmFsc2UpO1xuICAgICAgICB0aGlzLnByZXZpZXdab29tU3RlcCA9IHVzZShvYmoucHJldmlld1pvb21TdGVwLCAwLjEpO1xuICAgICAgICB0aGlzLnByZXZpZXdab29tTWF4ID0gdXNlKG9iai5wcmV2aWV3Wm9vbU1heCwgMik7XG4gICAgICAgIHRoaXMucHJldmlld1pvb21NaW4gPSB1c2Uob2JqLnByZXZpZXdab29tTWluLCAwLjUpO1xuICAgICAgICB0aGlzLnByZXZpZXdSb3RhdGUgPSB1c2Uob2JqLnByZXZpZXdSb3RhdGUsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5wcmV2aWV3RG93bmxvYWQgPSB1c2Uob2JqLnByZXZpZXdEb3dubG9hZCwgZmFsc2UpO1xuICAgICAgICB0aGlzLnByZXZpZXdDdXN0b20gPSB1c2Uob2JqLnByZXZpZXdDdXN0b20sIHVuZGVmaW5lZCk7XG4gICAgICAgIHRoaXMucHJldmlld0J1bGxldHMgPSB1c2Uob2JqLnByZXZpZXdCdWxsZXRzLCBmYWxzZSk7XG5cbiAgICAgICAgdGhpcy5hcnJvd1ByZXZJY29uID0gdXNlKG9iai5hcnJvd1ByZXZJY29uLCAnZmEgZmEtYXJyb3ctY2lyY2xlLWxlZnQnKTtcbiAgICAgICAgdGhpcy5hcnJvd05leHRJY29uID0gdXNlKG9iai5hcnJvd05leHRJY29uLCAnZmEgZmEtYXJyb3ctY2lyY2xlLXJpZ2h0Jyk7XG4gICAgICAgIHRoaXMuY2xvc2VJY29uID0gdXNlKG9iai5jbG9zZUljb24sICdmYSBmYS10aW1lcy1jaXJjbGUnKTtcbiAgICAgICAgdGhpcy5mdWxsc2NyZWVuSWNvbiA9IHVzZShvYmouZnVsbHNjcmVlbkljb24sICdmYSBmYS1hcnJvd3MtYWx0Jyk7XG4gICAgICAgIHRoaXMuc3Bpbm5lckljb24gPSB1c2Uob2JqLnNwaW5uZXJJY29uLCAnZmEgZmEtc3Bpbm5lciBmYS1wdWxzZSBmYS0zeCBmYS1mdycpO1xuICAgICAgICB0aGlzLnpvb21Jbkljb24gPSB1c2Uob2JqLnpvb21Jbkljb24sICdmYSBmYS1zZWFyY2gtcGx1cycpO1xuICAgICAgICB0aGlzLnpvb21PdXRJY29uID0gdXNlKG9iai56b29tT3V0SWNvbiwgJ2ZhIGZhLXNlYXJjaC1taW51cycpO1xuICAgICAgICB0aGlzLnJvdGF0ZUxlZnRJY29uID0gdXNlKG9iai5yb3RhdGVMZWZ0SWNvbiwgJ2ZhIGZhLXVuZG8nKTtcbiAgICAgICAgdGhpcy5yb3RhdGVSaWdodEljb24gPSB1c2Uob2JqLnJvdGF0ZVJpZ2h0SWNvbiwgJ2ZhIGZhLXJlcGVhdCcpO1xuICAgICAgICB0aGlzLmRvd25sb2FkSWNvbiA9IHVzZShvYmouZG93bmxvYWRJY29uLCAnZmEgZmEtYXJyb3ctY2lyY2xlLWRvd24nKTtcblxuICAgICAgICBpZiAob2JqICYmIG9iai5hY3Rpb25zICYmIG9iai5hY3Rpb25zLmxlbmd0aCkge1xuICAgICAgICAgICAgb2JqLmFjdGlvbnMgPSBvYmouYWN0aW9ucy5tYXAoYWN0aW9uID0+IG5ldyBOZ3hHYWxsZXJ5QWN0aW9uKGFjdGlvbikpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYWN0aW9ucyA9IHVzZShvYmouYWN0aW9ucywgW10pO1xuICAgIH1cbn1cbiJdfQ==