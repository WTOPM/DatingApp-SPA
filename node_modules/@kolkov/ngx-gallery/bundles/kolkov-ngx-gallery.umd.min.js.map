{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kolkov/ngx-gallery/lib/ngx-gallery.service.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-animation.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-order.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-layout.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image-size.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-options.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-ordered-image.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.module.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NgxGalleryService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Renderer2","Injectable","providedIn","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","index","previewOpen","EventEmitter","previewClose","activeChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","src","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","DomSanitizer","ElementRef","ChangeDetectorRef","Input","Output","ViewChild","HostListener","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","imageClick","canChangeImage","reset","selectedIndex","getImages","lazyLoading","indexes_1","prevIndex","nextIndex","filter","indexOf","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","timeout","NgxGalleryOrder","Column","Row","Page","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","action","icon","disabled","titleText","onClick","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryImageSize","Cover","Contain","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryComponent","myElement","options","imagesReady","change","previewChange","oldImagesLength","prevBreakpoint","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","NgxGalleryOrderedImage","medium","bigImages","big","labels","label","breakpoints","window","pop","concat","__spread","a","sort","combineOptions","second","keys","val","HostBinding","encapsulation","ViewEncapsulation","None","providers","NgxGalleryArrowsComponent","prevClick","nextClick","handlePrevClick","handleNextClick","NgxGalleryActionComponent","closeClick","NgxGalleryBulletsComponent","active","bulletChange","getBullets","handleChange","CustomHammerConfig","_super","apply","overrides","pinch","enable","rotate","__","constructor","create","__extends","HammerGestureConfig","NgxGalleryModule","NgModule","declarations","imports","CommonModule","exports","provide","HAMMER_GESTURE_CONFIG","useClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {ElementRef, Injectable, Renderer2} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxGalleryService {\n  private swipeHandlers: Map<string, (() => void)[]> = new Map<string, (() => void)[]>();\n\n  constructor(private renderer: Renderer2) {\n  }\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: () => void, prevHandler: () => void): void {\n\n    const handlers = this.getSwipeHandlers(id);\n\n    // swipeleft and swiperight are available only if hammerjs is included\n    try {\n      if (status && !handlers) {\n        this.swipeHandlers.set(id, [\n          this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n          this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n        ]);\n      } else if (!status && handlers) {\n        handlers.map((handler) => handler());\n        this.removeSwipeHandlers(id);\n      }\n    } catch (e) {\n    }\n  }\n\n  validateUrl(url: string): string {\n    if (url.replace) {\n      return url.replace(new RegExp(' ', 'g'), '%20')\n        .replace(new RegExp('\\'', 'g'), '%27');\n    } else {\n      return url;\n    }\n  }\n\n  getBackgroundUrl(image: string) {\n    return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  private getSwipeHandlers(id: string): (() => void)[] | undefined {\n    return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n    this.swipeHandlers.delete(id);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeStyle, SafeUrl} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\n\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss'],\n  // encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnDestroy, OnChanges {\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() activeChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: () => void;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n              private helperService: NgxGalleryService, private renderer: Renderer2,\n              private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\n        'preview', () => this.showNext(), () => this.showPrev());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.keyDownListener) {\n      this.keyDownListener();\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n  }\n\n  onKeyDown(e) {\n    if (this.isOpen) {\n      if (this.keyboardNavigation) {\n        if (this.isKeyboardPrev(e)) {\n          this.showPrev();\n        } else if (this.isKeyboardNext(e)) {\n          this.showNext();\n        }\n      }\n      if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n        this.close();\n      }\n    }\n  }\n\n  open(index: number): void {\n    this.previewOpen.emit();\n\n    this.index = index;\n    this.isOpen = true;\n    this.show(true);\n\n    if (this.forceFullscreen) {\n      this.manageFullscreen();\n    }\n\n    this.keyDownListener = this.renderer.listen('window', 'keydown', (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n    this.isOpen = false;\n    this.closeFullscreen();\n    this.previewClose.emit();\n\n    this.stopAutoPlay();\n\n    if (this.keyDownListener) {\n      this.keyDownListener();\n    }\n  }\n\n  imageMouseEnter(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  imageMouseLeave(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  startAutoPlay(): void {\n    if (this.autoPlay) {\n      this.stopAutoPlay();\n\n      this.timer = setTimeout(() => {\n        if (!this.showNext()) {\n          this.index = -1;\n          this.showNext();\n        }\n      }, this.autoPlayInterval);\n    }\n  }\n\n  stopAutoPlay(): void {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  showAtIndex(index: number): void {\n    this.index = index;\n    this.show();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext()) {\n      this.index++;\n\n      if (this.index === this.images.length) {\n        this.index = 0;\n      }\n\n      this.show();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev()) {\n      this.index--;\n\n      if (this.index < 0) {\n        this.index = this.images.length - 1;\n      }\n\n      this.show();\n    }\n  }\n\n  canShowNext(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index < this.images.length - 1;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index > 0;\n    } else {\n      return false;\n    }\n  }\n\n  manageFullscreen(): void {\n    if (this.fullscreen || this.forceFullscreen) {\n      const doc = document as any;\n\n      if (!doc.fullscreenElement && !doc.mozFullScreenElement\n        && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n        this.openFullscreen();\n      } else {\n        this.closeFullscreen();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n    return this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  zoomIn(): void {\n    if (this.canZoomIn()) {\n      this.zoomValue += this.zoomStep;\n\n      if (this.zoomValue > this.zoomMax) {\n        this.zoomValue = this.zoomMax;\n      }\n    }\n  }\n\n  zoomOut(): void {\n    if (this.canZoomOut()) {\n      this.zoomValue -= this.zoomStep;\n\n      if (this.zoomValue < this.zoomMin) {\n        this.zoomValue = this.zoomMin;\n      }\n\n      if (this.zoomValue <= 1) {\n        this.resetPosition();\n      }\n    }\n  }\n\n  rotateLeft(): void {\n    this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n    this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n    return this.zoomValue < this.zoomMax;\n  }\n\n  canZoomOut(): boolean {\n    return this.zoomValue > this.zoomMin;\n  }\n\n  canDragOnZoom() {\n    return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n    if (this.canDragOnZoom()) {\n      this.initialX = this.getClientX(e);\n      this.initialY = this.getClientY(e);\n      this.initialLeft = this.positionLeft;\n      this.initialTop = this.positionTop;\n      this.isMove = true;\n\n      e.preventDefault();\n    }\n  }\n\n  mouseUpHandler(e): void {\n    this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n    if (this.isMove) {\n      this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n      this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n    }\n  }\n\n  private getClientX(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n    if (this.zoom) {\n      this.positionLeft = 0;\n      this.positionTop = 0;\n    }\n  }\n\n  private isKeyboardNext(e): boolean {\n    return e.keyCode === 39;\n  }\n\n  private isKeyboardPrev(e): boolean {\n    return e.keyCode === 37;\n  }\n\n  private isKeyboardEsc(e): boolean {\n    return e.keyCode === 27;\n  }\n\n  private openFullscreen(): void {\n    const element = document.documentElement as any;\n\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  private closeFullscreen(): void {\n    if (this.isFullscreen()) {\n      const doc = document as any;\n\n      if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n      } else if (doc.msExitFullscreen) {\n        doc.msExitFullscreen();\n      } else if (doc.mozCancelFullScreen) {\n        doc.mozCancelFullScreen();\n      } else if (doc.webkitExitFullscreen) {\n        doc.webkitExitFullscreen();\n      }\n    }\n  }\n\n  private isFullscreen() {\n    const doc = document as any;\n\n    return doc.fullscreenElement || doc.webkitFullscreenElement\n      || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n  private show(first = false) {\n    this.loading = true;\n    this.stopAutoPlay();\n\n    this.activeChange.emit(this.index);\n\n    if (first || !this.animation) {\n      this._show();\n    } else {\n      setTimeout(() => this._show(), 600);\n    }\n  }\n\n  private _show() {\n    this.zoomValue = 1;\n    this.rotateValue = 0;\n    this.resetPosition();\n\n    this.src = this.getSafeUrl(this.images[this.index] as string);\n    this.srcIndex = this.index;\n    this.description = this.descriptions[this.index];\n    this.changeDetectorRef.markForCheck();\n\n    setTimeout(() => {\n      if (this.isLoaded(this.previewImage.nativeElement)) {\n        this.loading = false;\n        this.startAutoPlay();\n        this.changeDetectorRef.markForCheck();\n      } else {\n        setTimeout(() => {\n          if (this.loading) {\n            this.showSpinner = true;\n            this.changeDetectorRef.markForCheck();\n          }\n        });\n\n        this.previewImage.nativeElement.onload = () => {\n          this.loading = false;\n          this.showSpinner = false;\n          this.previewImage.nativeElement.onload = null;\n          this.startAutoPlay();\n          this.changeDetectorRef.markForCheck();\n        };\n      }\n    });\n  }\n\n  private isLoaded(img): boolean {\n    if (!img.complete) {\n      return false;\n    }\n\n    return !(typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0);\n  }\n\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryOrderedImage} from '../ngx-gallery-ordered-image';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\nimport {NgxGalleryAnimation} from '../ngx-gallery-animation';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() imageClick = new EventEmitter();\n  @Output() activeChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(private sanitization: DomSanitizer,\n              private elementRef: ElementRef, private helperService: NgxGalleryService) {\n  }\n\n  // @HostBinding('style.display') public display = 'inline-block';\n  // @HostBinding('style.background-color') public color = 'lime';\n\n  ngOnInit() {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay) {\n      this.startAutoPlay();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.lazyLoading) {\n      const indexes = [this.selectedIndex];\n      const prevIndex = this.selectedIndex - 1;\n\n      if (prevIndex === -1 && this.infinityMove) {\n        indexes.push(this.images.length - 1);\n      } else if (prevIndex >= 0) {\n        indexes.push(prevIndex);\n      }\n\n      const nextIndex = this.selectedIndex + 1;\n\n      if (nextIndex === this.images.length && this.infinityMove) {\n        indexes.push(0);\n      } else if (nextIndex < this.images.length) {\n        indexes.push(nextIndex);\n      }\n\n      return this.images.filter((img, i) => indexes.indexOf(i) !== -1);\n    } else {\n      return this.images;\n    }\n  }\n\n  startAutoPlay(): void {\n    this.stopAutoPlay();\n\n    this.timer = setInterval(() => {\n      if (!this.showNext()) {\n        this.selectedIndex = -1;\n        this.showNext();\n      }\n    }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (this.clickable) {\n      this.imageClick.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  show(index: number) {\n    this.selectedIndex = index;\n    this.activeChange.emit(this.selectedIndex);\n    this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext() && this.canChangeImage) {\n      this.selectedIndex++;\n\n      if (this.selectedIndex === this.images.length) {\n        this.selectedIndex = 0;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev() && this.canChangeImage) {\n      this.selectedIndex--;\n\n      if (this.selectedIndex < 0) {\n        this.selectedIndex = this.images.length - 1;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n    }\n  }\n\n  setChangeTimeout() {\n    this.canChangeImage = false;\n    let timeout = 1000;\n\n    if (this.animation === NgxGalleryAnimation.Slide\n      || this.animation === NgxGalleryAnimation.Fade) {\n      timeout = 500;\n    }\n\n    setTimeout(() => {\n      this.canChangeImage = true;\n    }, timeout);\n  }\n\n  canShowNext(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex < this.images.length - 1;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex > 0;\n    } else {\n      return false;\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n}\n","export class NgxGalleryOrder {\n  static Column = 1;\n  static Row = 2;\n  static Page = 3;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeStyle} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\nimport {NgxGalleryOrder} from '../ngx-gallery-order';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryThumbnailsComponent implements OnInit, OnChanges {\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() activeChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n              private helperService: NgxGalleryService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedIndex) {\n      this.validateIndex();\n    }\n\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\n        'thumbnails', () => this.moveRight(), () => this.moveLeft());\n    }\n\n    if (this.images) {\n      this.remainingCountValue = this.images.length - (this.rows * this.columns);\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n    this.setDefaultPosition();\n\n    this.index = 0;\n    this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.remainingCount) {\n      return this.images.slice(0, this.rows * this.columns);\n    } else if (this.lazyLoading && this.order !== NgxGalleryOrder.Row) {\n      let stopIndex = 0;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n      } else if (this.order === NgxGalleryOrder.Page) {\n        stopIndex = this.index + ((this.columns * this.rows) * 2);\n      }\n\n      if (stopIndex <= this.minStopIndex) {\n        stopIndex = this.minStopIndex;\n      } else {\n        this.minStopIndex = stopIndex;\n      }\n\n      return this.images.slice(0, stopIndex);\n    } else {\n      return this.images;\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (!this.hasLink(index)) {\n      this.selectedIndex = index;\n      this.activeChange.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  hasLink(index: number): boolean {\n    if (this.links && this.links.length && this.links[index]) {\n      return true;\n    }\n  }\n\n  moveRight(): void {\n    if (this.canMoveRight()) {\n      this.index += this.moveSize;\n      const maxIndex = this.getMaxIndex() - this.columns;\n\n      if (this.index > maxIndex) {\n        this.index = maxIndex;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  moveLeft(): void {\n    if (this.canMoveLeft()) {\n      this.index -= this.moveSize;\n\n      if (this.index < 0) {\n        this.index = 0;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  canMoveRight(): boolean {\n    return this.index + this.columns < this.getMaxIndex();\n  }\n\n  canMoveLeft(): boolean {\n    return this.index !== 0;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = Math.floor(index / this.rows);\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = index % this.columns;\n    } else {\n      calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = index % this.rows;\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = Math.floor(index / this.columns);\n    } else {\n      calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n    return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n    return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n    this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';\n\n    this.thumbnailsMarginLeft = -((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n    this.thumbnailsLeft = '0px';\n    this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n    if (this.remainingCount) {\n      return false;\n    } else {\n      return this.arrows && this.images && this.images.length > this.getVisibleCount()\n        && (!this.arrowsAutoHide || this.mouseenter);\n    }\n  }\n\n  validateIndex(): void {\n    if (this.images) {\n      let newIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        newIndex = Math.floor(this.selectedIndex / this.rows);\n      } else {\n        newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n      }\n\n      if (this.remainingCount) {\n        newIndex = 0;\n      }\n\n      if (newIndex < this.index || newIndex >= this.index + this.columns) {\n        const maxIndex = this.getMaxIndex() - this.columns;\n        this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n        this.setThumbnailsPosition();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n    return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n      + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n    if (this.margin !== 0) {\n      return this.getSafeStyle('calc(' + (100 / count) + '% - '\n        + (((count - 1) * this.margin) / count) + 'px)');\n    } else {\n      return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n    }\n  }\n\n  private getMaxIndex(): number {\n    if (this.order === NgxGalleryOrder.Page) {\n      let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n      if (this.images.length % this.getVisibleCount() > this.columns) {\n        maxIndex += this.columns;\n      } else {\n        maxIndex += this.images.length % this.getVisibleCount();\n      }\n\n      return maxIndex;\n    } else {\n      return Math.ceil(this.images.length / this.rows);\n    }\n  }\n\n  private getVisibleCount(): number {\n    return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","import {NgxGalleryAction} from './ngx-gallery-action';\nimport {NgxGalleryOrder} from './ngx-gallery-order';\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\nimport {NgxGalleryAnimation} from './ngx-gallery-animation';\nimport {NgxGalleryImageSize} from './ngx-gallery-image-size';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import {SafeResourceUrl} from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n  src: string | SafeResourceUrl;\n  index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n  src: string | SafeResourceUrl;\n  index: number;\n\n  constructor(obj: INgxGalleryOrderedImage) {\n    this.src = obj.src;\n    this.index = obj.index;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport {NgxGalleryService} from './ngx-gallery.service';\nimport {NgxGalleryOptions} from './ngx-gallery-options';\nimport {NgxGalleryImage} from './ngx-gallery-image';\nimport {NgxGalleryOrderedImage} from './ngx-gallery-ordered-image';\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\n\n@Component({\n  selector: 'ngx-gallery',\n  templateUrl: './ngx-gallery.component.html',\n  styleUrls: ['./ngx-gallery.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [NgxGalleryService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[] = [{}];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  // tslint:disable-next-line:no-output-native\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thumbnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.left') left: string;\n\n  constructor(private myElement: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n    this.sortOptions();\n    this.setBreakpoint();\n    this.setOptions();\n    this.checkFullWidth();\n    if (this.currentOptions) {\n      this.selectedIndex = this.currentOptions.startIndex as number;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n      || (this.images !== this.oldImages)) {\n      this.oldImagesLength = this.images.length;\n      this.oldImages = this.images;\n      this.setOptions();\n      this.setImages();\n\n      if (this.images && this.images.length) {\n        this.imagesReady.emit();\n      }\n\n      if (this.image) {\n        this.image.reset(this.currentOptions.startIndex as number);\n      }\n\n      if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n        && this.images.length <= 1) {\n        this.currentOptions.thumbnails = false;\n        this.currentOptions.imageArrows = false;\n      }\n\n      this.resetThumbnails();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n    this.setBreakpoint();\n\n    if (this.prevBreakpoint !== this.breakpoint) {\n      this.setOptions();\n      this.resetThumbnails();\n    }\n\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n\n      if (this.fullWidthTimeout) {\n        clearTimeout(this.fullWidthTimeout);\n      }\n\n      this.fullWidthTimeout = setTimeout(() => {\n        this.checkFullWidth();\n      }, 200);\n    }\n  }\n\n  getImageHeight(): string {\n    return (this.currentOptions && this.currentOptions.thumbnails) ?\n      this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n    if (this.currentOptions && this.currentOptions.image) {\n      return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n        + this.currentOptions.thumbnailsMargin + 'px)';\n    } else {\n      return '100%';\n    }\n  }\n\n  getThumbnailsMarginTop(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  getThumbnailsMarginBottom(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  openPreview(index: number): void {\n    if (this.currentOptions.previewCustom) {\n      this.currentOptions.previewCustom(index);\n    } else {\n      this.previewEnabled = true;\n      this.preview.open(index);\n    }\n  }\n\n  onPreviewOpen(): void {\n    this.previewOpen.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.stopAutoPlay();\n    }\n  }\n\n  onPreviewClose(): void {\n    this.previewEnabled = false;\n    this.previewClose.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.startAutoPlay();\n    }\n  }\n\n  selectFromImage(index: number) {\n    this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n    this.select(index);\n\n    if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n      && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n      this.openPreview(this.selectedIndex);\n    }\n  }\n\n  show(index: number): void {\n    this.select(index);\n  }\n\n  showNext(): void {\n    this.image.showNext();\n  }\n\n  showPrev(): void {\n    this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n    if (this.images && this.currentOptions) {\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1);\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images && this.currentOptions) {\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex > 0);\n    } else {\n      return false;\n    }\n  }\n\n  previewSelect(index: number) {\n    this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n    this.thumbnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n    this.thumbnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n    return this.thumbnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n    return this.thumbnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n    if (this.thumbnails) {\n      this.thumbnails.reset(this.currentOptions.startIndex as number);\n    }\n  }\n\n  private select(index: number) {\n    this.selectedIndex = index;\n\n    this.change.emit({\n      index,\n      image: this.images[index]\n    });\n  }\n\n  private checkFullWidth(): void {\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n      this.width = document.body.clientWidth + 'px';\n      this.left = (-(document.body.clientWidth -\n        this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n    }\n  }\n\n  private setImages(): void {\n    this.smallImages = this.images.map((img) => img.small as string);\n    this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n      src: img.medium,\n      index: i\n    }));\n    this.bigImages = this.images.map((img) => img.big as string);\n    this.descriptions = this.images.map((img) => img.description as string);\n    this.links = this.images.map((img) => img.url as string);\n    this.labels = this.images.map((img) => img.label as string);\n  }\n\n  private setBreakpoint(): void {\n    this.prevBreakpoint = this.breakpoint;\n    let breakpoints;\n\n    if (typeof window !== 'undefined') {\n      breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n        .map((opt) => opt.breakpoint);\n    }\n\n    if (breakpoints && breakpoints.length) {\n      this.breakpoint = breakpoints.pop();\n    } else {\n      this.breakpoint = undefined;\n    }\n  }\n\n  private sortOptions(): void {\n    this.options = [\n      ...this.options.filter((a) => a.breakpoint === undefined),\n      ...this.options\n        .filter((a) => a.breakpoint !== undefined)\n        .sort((a, b) => b.breakpoint - a.breakpoint)\n    ];\n  }\n\n  private setOptions(): void {\n    this.currentOptions = new NgxGalleryOptions({});\n\n    this.options\n      .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n      .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n    this.width = this.currentOptions.width as string;\n    this.height = this.currentOptions.height as string;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n    Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryArrowsComponent implements OnInit {\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() prevClick = new EventEmitter();\n  @Output() nextClick = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  handlePrevClick(): void {\n    this.prevClick.emit();\n  }\n\n  handleNextClick(): void {\n    this.nextClick.emit();\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent implements OnInit/*, AfterViewInit*/ {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() closeClick: EventEmitter<Event> = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  handleClick(event: Event) {\n    if (!this.disabled) {\n      this.closeClick.emit(event);\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryBulletsComponent implements OnInit {\n  @Input() count: number;\n  @Input() active = 0;\n\n  @Output() bulletChange = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getBullets(): number[] {\n    return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n    this.bulletChange.emit(index);\n  }\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport {NgxGalleryComponent} from './ngx-gallery.component';\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\nimport {NgxGalleryArrowsComponent} from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport {NgxGalleryActionComponent} from './ngx-gallery-action/ngx-gallery-action.component';\nimport {NgxGalleryBulletsComponent} from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport {CommonModule} from '@angular/common';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\n@Injectable()\nexport class CustomHammerConfig extends HammerGestureConfig  {\n  overrides = {\n    pinch: { enable: false },\n    rotate: { enable: false }\n  } as any;\n}\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryImageComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryPreviewComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [ CommonModule],\n  exports: [NgxGalleryComponent],\n  providers: [\n    { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\n  ]\n})\nexport class NgxGalleryModule {\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.label = obj.label;\n    }\n}\n"]}